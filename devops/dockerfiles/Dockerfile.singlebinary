FROM node:latest as frontendbuilder
WORKDIR /app

# copy package manager stuff
COPY services/frontend/package.json services/frontend/package-lock.json ./

RUN --mount=type=cache,target=/usr/src/app/.npm \
    npm set cache /usr/src/app/.npm && \
    npm ci

COPY services/frontend .

RUN npm run build

# ---------------------------------------------------
FROM golang:latest as backendbuilder
WORKDIR /app


RUN go env -w GOCACHE=/go-cache
RUN go env -w GOMODCACHE=/gomod-cache

# copy package manager stuff
COPY services/backend/go.mod services/backend/go.sum ./

# install dependencies
RUN --mount=type=cache,target=/gomod-cache \ 
    go mod download

# copy backend code
COPY services/backend .

# install frontend
COPY --from=frontendbuilder /app/dist src/assets/frontend/

# build software
RUN --mount=type=cache,target=/gomod-cache --mount=type=cache,target=/go-cache \
    CGO_ENABLED=0 \
    go build -o /app/myapplication src/main.go

# ---------------------------------------------------
FROM scratch

WORKDIR /app

COPY --from=backendbuilder --chmod=0755 /app/myapplication /app/myapplication

CMD [ "/app/myapplication", "run" ]
